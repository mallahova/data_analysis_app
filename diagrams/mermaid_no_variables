classDiagram

%% Factory Design Pattern
class FileReaderFactory {
  +static get_reader() DataReader
}
class DataReader {
  <<abstract>>
  +read() pd.DataFrame
}
class CSVReader {
  +read() pd.DataFrame
}
class JSONReader {
  +read() pd.DataFrame
}
FileReaderFactory --> DataReader : uses
DataReader <|-- CSVReader
DataReader <|-- JSONReader

%% Strategy Design Pattern
class PlotStrategy {
  <<abstract>>
  +create_plot() Figure
}
class LinePlotStrategy {
  +create_plot() Figure
}
class ScatterPlotStrategy {
  +create_plot() Figure
}
class HistogramStrategy {
  +create_plot() Figure
}
class HeatmapStrategy {
  +create_plot() Figure
}
class BoxPlotStrategy {
  +create_plot() Figure
}
class Plot {
  -title: str
  -figure: Figure
  -plot_type: str
  -color: str
  -strategy: PlotStrategy
  +set_strategy()
  +create_plot() Figure
  +update_color()
}

PlotStrategy <|-- LinePlotStrategy
PlotStrategy <|-- ScatterPlotStrategy
PlotStrategy <|-- HistogramStrategy
PlotStrategy <|-- HeatmapStrategy
PlotStrategy <|-- BoxPlotStrategy
Plot --> PlotStrategy : sets

%% Observer Design Pattern
class Dashboard {
  -plots: List<Plot>
  -observers: List<Plot>
  +add_plot()
  +change_color_theme()
  +get_iterator() : Iterator<Plot>
}

Dashboard o-- Plot : aggregates
Dashboard --> Plot : notifies

%% Iterator Design Pattern
class PlotIterator {
  <<interface>>
  +__iter__() PlotIterator
  +__next__() Plot
}
class PlotTypeIterator {
  +__iter__() PlotIterator
  +__next__() Plot
}
class AlphabeticalIterator {
  +__iter__() PlotIterator
  +__next__() Plot
}

PlotIterator <|-- PlotTypeIterator
PlotIterator <|-- AlphabeticalIterator
Dashboard --> PlotIterator : get_iterator

%% Template Design Pattern
class DimensionalityReduction {
  <<abstract>>
  -data: pd.DataFrame
  -columns: list
  -n_components: int
  -scaled_data: pd.DataFrame
  +preprocess_data()
  +apply_reduction() : abstract
  +postprocess_results() : pd.DataFrame
  +run() : pd.DataFrame
}
class PCAAnalysis {
  +apply_reduction() : pd.DataFrame
}
class UMAPAnalysis {
  -n_neighbors: int
  -min_dist: float
  +apply_reduction() : pd.DataFrame
}

DimensionalityReduction <|-- PCAAnalysis
DimensionalityReduction <|-- UMAPAnalysis

%% Data Preprocessing
class DataPreprocessor {
  -original_data: pd.DataFrame
  -data: pd.DataFrame
  +reset_data()
  +handle_nulls() : pd.DataFrame
  +rename_columns() : pd.DataFrame
  +drop_columns() : pd.DataFrame
  +get_data() : pd.DataFrame
}

%% Main Interface
class MainInterface {
  +run_app()
}
MainInterface --> FileReaderFactory : uses
MainInterface --> DataPreprocessor : uses
MainInterface --> Dashboard : uses
MainInterface --> Plot : uses
MainInterface --> DimensionalityReduction : uses

%% Connections between components
Plot --> Dashboard : adds
Plot --> Plot : notifies
